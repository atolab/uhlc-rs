var searchIndex = JSON.parse('{\
"uhlc":{"doc":"A Unique Hybrid Logical Clock.","i":[[3,"ID","uhlc","An identifier for an HLC (MAX_SIZE bytes maximum). This…",null,null],[3,"NTP64","","A NTP 64-bits format as specified in RFC-5909",null,null],[12,"0","","",0,null],[3,"Timestamp","","A timestamp made of a [`NTP64`] and a [`crate::HLC`]\'s…",null,null],[3,"HLC","","An Hybric Logical Clock generating [`Timestamp`]s",null,null],[5,"system_time_clock","","A physical clock relying on std::time::SystemTime::now().",null,[[],["ntp64",3]]],[18,"MAX_SIZE","","The maximum size of an ID in bytes: 16.",1,null],[11,"new","","Create a new ID with the \\\"`size`\\\" first bytes of \\\"`id`\\\"",1,[[],["id",3]]],[11,"size","","The size of this ID in bytes",1,[[]]],[11,"as_slice","","This ID as a slice",1,[[]]],[11,"as_u64","","Returns this NTP64 as a u64.",0,[[]]],[11,"as_secs","","Returns the 32-bits seconds part.",0,[[]]],[11,"subsec_nanos","","Returns the 32-bits fraction of second part converted to…",0,[[]]],[11,"to_duration","","Convert to a [`Duration`].",0,[[],["duration",3]]],[11,"to_system_time","","Convert to a [`SystemTime`] (making the assumption that…",0,[[],["systemtime",3]]],[11,"new","","",2,[[["id",3],["ntp64",3]],["timestamp",3]]],[11,"get_time","","",2,[[],["ntp64",3]]],[11,"get_id","","",2,[[],["id",3]]],[17,"CSIZE","","The size of counter part in [`NTP64`] (in bits)",null,null],[17,"DELTA_MS","","HLC Delta in milliseconds: maximum accepted drift for an…",null,null],[11,"with_clock","","Create a new [`HLC`] with an `id` (must be unique) and a…",3,[[["id",3]],["hlc",3]]],[11,"with_system_time","","Create a new [`HLC`] with an `id` (must be unique) and…",3,[[["id",3]],["hlc",3]]],[11,"new_timestamp","","Generate a new [`Timestamp`].",3,[[]]],[11,"update_with_timestamp","","Update this [`HLC`] with a [`Timestamp`].",3,[[["timestamp",3]]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","","",1,[[["uuid",3]]]],[11,"from","","",0,[[["duration",3]],["ntp64",3]]],[11,"clone","","",1,[[],["id",3]]],[11,"clone","","",0,[[],["ntp64",3]]],[11,"clone","","",2,[[],["timestamp",3]]],[11,"default","","",0,[[],["ntp64",3]]],[11,"default","","Create a new [`HLC`] with a generated UUID and using…",3,[[]]],[11,"cmp","","",1,[[],["ordering",4]]],[11,"cmp","","",0,[[["ntp64",3]],["ordering",4]]],[11,"cmp","","",2,[[["timestamp",3]],["ordering",4]]],[11,"eq","","",1,[[]]],[11,"eq","","",0,[[["ntp64",3]]]],[11,"ne","","",0,[[["ntp64",3]]]],[11,"eq","","",2,[[["timestamp",3]]]],[11,"ne","","",2,[[["timestamp",3]]]],[11,"partial_cmp","","",1,[[],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",0,[[["ntp64",3]],[["ordering",4],["option",4]]]],[11,"lt","","",0,[[["ntp64",3]]]],[11,"le","","",0,[[["ntp64",3]]]],[11,"gt","","",0,[[["ntp64",3]]]],[11,"ge","","",0,[[["ntp64",3]]]],[11,"partial_cmp","","",2,[[["timestamp",3]],[["ordering",4],["option",4]]]],[11,"lt","","",2,[[["timestamp",3]]]],[11,"le","","",2,[[["timestamp",3]]]],[11,"gt","","",2,[[["timestamp",3]]]],[11,"ge","","",2,[[["timestamp",3]]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"sub","","",0,[[]]],[11,"add","","",0,[[]]],[11,"add","","",0,[[["ntp64",3]]]],[11,"add","","",0,[[]]],[11,"add_assign","","",0,[[]]],[11,"hash","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]]],"p":[[3,"NTP64"],[3,"ID"],[3,"Timestamp"],[3,"HLC"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);